<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[WebComponents.org]]></title>
        <description><![CDATA[A place to discuss and evolve Web Component best-practices]]></description>
        <link>http://webcomponents.org</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Thu, 18 Dec 2014 18:41:18 GMT</lastBuildDate>
        <atom:link href="http://webcomponents.org/presentations.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Thu, 18 Dec 2014 18:40:46 GMT</pubDate>
        <item>
            <title><![CDATA[Web Components + Backbone: A Game-Changing Combination]]></title>
            <description><![CDATA[<p>Web Components promise to change how we think about modularity on the web, and
when combined with the structure and organization of Backbone.js we can create
portable, dynamic, encapsulated UI modules that fit into any web application.</p>
<!-- Excerpt -->

<p>Web Components open up new, low-level interfaces for developers to create
modules on the web with Custom Elements, HTML Templates, HTML Imports, and the
Shadow DOM. These are exciting new technologies for web modularity, but on their
own they can provide neither the rich interactivity nor maintainable structure
we’ve come to expect in our JavaScript web applications. Other JS libraries are
already exploring mechanisms for integrating Web Components, but Backbone.js,
with its light-weight, flexible API, is in a unique position to provide a solid
foundation for UI modules, and indeed entire UI libraries, built with Web
Components.</p>
<p>This talk will provide an introduction to Web Components, but will focus on how
Backbone can utilize each of their APIs to create well-structured UI modules to
be reused and shared between web applications. It will present patterns for
creating these modules and consider best practices for creating components in
sharable UI libraries. And while browser support for Web Components is rapidly
improving, this talk will also consider the polyfills available to start using
Web Components in Backbone.js applications today.</p>
<p>Web Components and Backbone.js complement each other and, together, are a
revolutionary pair that offers new and exciting approaches for developing
interactive UI modules on the web.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/dztuKgjk0Bg" itemprop="video"></iframe>
</div>

<div class="video-wrap">
    <iframe src="//www.slideshare.net/slideshow/embed_code/42832724"></iframe>
</div>]]></description>
            <link>http://webcomponents.org/presentations/webcomponents-plus-backbone-a-game-changing-combination-at-backbone-conf</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/webcomponents-plus-backbone-a-game-changing-combination-at-backbone-conf</guid>
            <pubDate>Mon, 15 Dec 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Web Components and the Future of CSS]]></title>
            <description><![CDATA[<p>Philip Walton explains how, with Web Components, we finally have real style scoping and a proper abstraction mechanism. Now we can write truly modular CSS.</p>
<!-- Excerpt -->

<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/QHxrr6Q82yI" itemprop="video"></iframe>
</div>

<p><a href="//philipwalton.github.io/talks/2014-11-24/">
    <img src="../../img/stories/web-components-and-the-future-of-css-cover.png" alt="Presentation Cover">
</a></p>
]]></description>
            <link>http://webcomponents.org/presentations/web-components-and-the-future-of-css</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/web-components-and-the-future-of-css</guid>
            <pubDate>Mon, 24 Nov 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Polymer: State of the Union]]></title>
            <description><![CDATA[<p>Polymer started as an experiment in pushing the web platform. In the two and a
half years since, it helped ship a lot of standards, a developer preview of
Polymer, and learned a lot and heard a lot of feedback from developers.</p>
<!-- Excerpt -->

<p>Matt will share what they have learned, the state of the art of Polymer today,
and most importantly what’s next.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/0LT6W5QVCJI" itemprop="video"></iframe>
</div>

<div class="video-wrap">
    <iframe src="//www.slideshare.net/slideshow/embed_code/42197217"></iframe>
</div>]]></description>
            <link>http://webcomponents.org/presentations/polymer-state-of-the-union-at-chrome-devsummit</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/polymer-state-of-the-union-at-chrome-devsummit</guid>
            <pubDate>Wed, 19 Nov 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Let’s build some apps with Polymer!]]></title>
            <description><![CDATA[<p>This talk will cover what it takes to build a single page app in Polymer. Rob
will demonstrate how to quickly scaffold the structure of an application by
leveraging Material Design elements, explore best practices around lazy loading
elements to keep our app speedy, and also touch upon the tools we can use to
debug and test our app.</p>
<!-- Excerpt -->

<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/kV0hgdMpH28" itemprop="video"></iframe>
</div>

<script async class="speakerdeck-embed" data-id="109efd505e16013232db2e3489c2afa1" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>]]></description>
            <link>http://webcomponents.org/presentations/lets-build-some-apps-with-polymer-at-chrome-devsummit</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/lets-build-some-apps-with-polymer-at-chrome-devsummit</guid>
            <pubDate>Wed, 19 Nov 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Easy composition and reuse with Web Components]]></title>
            <description><![CDATA[<p>Dimitri explores the set of enabling technologies that make up Web Components,
and describes how these pieces make it easy and fast to build composable
components, and make HTML finally earn its keep.</p>
<!-- Excerpt -->

<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/6vcQlD-jadk" itemprop="video"></iframe>
</div>

<div class="video-wrap">
    <iframe src="https://docs.google.com/presentation/embed?id=1bNgnYaoE0-GiU6oouDxpW1VTMBZzS6bB1P0rJnnJz-Q&amp;start=false&amp;loop=false&amp;"></iframe>
</div>]]></description>
            <link>http://webcomponents.org/presentations/easy-composition-and-reuse-with-web-components-at-chrome-devsummit</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/easy-composition-and-reuse-with-web-components-at-chrome-devsummit</guid>
            <pubDate>Wed, 19 Nov 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Don't stop thinking about tomorrow - AngularJS and Web Components]]></title>
            <description><![CDATA[<p>This presentation is just like the song: a friendly nudge to look ahead at the great things coming the Web’s way. Sure, we &lt;3 AngularJS, and if you’re like us, you probably do too. But we are also very excited about the future: the future of Angular and the future of the web.</p>
<!-- Excerpt -->

<p>In this talk we would like to show how we can build awesome things using AngularJS and Web Components. We will first speak about Web Components and the different specifications that make them what they are, like Shadow DOM, HTML Templates, HTML Imports and Custom Elements(<code>&lt;mega-button&gt;</code>s anyone?), and then look at how we can integrate them with the AngularJS of today. And of course, this talk wouldn’t be about the future, if we didn’t mention the  much talked about 2.0 and the part that Web Components will play in it.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/gSTNTXtQwaY" itemprop="video"></iframe>
</div>

<p><a href="http://pascalprecht.github.io/dont-stop-thinking-about-tomorrow">
    <img src="../../img/stories/dont-stop-thinking-about-tomorrow-slides.png">
</a></p>
]]></description>
            <link>http://webcomponents.org/presentations/dont-stop-thinking-about-tomorrow-angularjs-and-web-components</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/dont-stop-thinking-about-tomorrow-angularjs-and-web-components</guid>
            <pubDate>Wed, 22 Oct 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Multi-device apps with Web Components]]></title>
            <description><![CDATA[<p>Building a multi-device app is extremely challenging, unless you&#39;re an expert
developer. It&#39;s time for the web to get its own collection of fast, beautiful,
and responsive by default components.</p>
<!-- Excerpt -->

<p>In this talk, we&#39;ll look at how you can use readily available Web Components to
quickly build apps that look gorgeous on phones, tablets, and desktops. With
these new tools we can greatly simplify the process of supporting multiple
screen sizes, while also keeping our code sane and readable.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/kn0y7uugO0Y" itemprop="video"></iframe>
</div>

<script async class="speakerdeck-embed" data-id="182b5d001d95013278dd06e915146373" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>]]></description>
            <link>http://webcomponents.org/presentations/multi-device-apps-with-web-components-at-jqcon</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/multi-device-apps-with-web-components-at-jqcon</guid>
            <pubDate>Sat, 13 Sep 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[As I Walk Through The Valley Of The Shadow Of DOM]]></title>
            <description><![CDATA[<p>Let&#39;s party like it’s the late 1990&#39;s — When the Components spec was
<a href="http://www.w3.org/TR/NOTE-HTMLComponents">originally introduced</a> and 2Pac was
livin&#39; in a gangsta&#39;s paradise. While the implementation of this paradigm is
long overdue, at least it&#39;s been a sufficient amount of time for Microsoft to
forget <a href="http://www.w3.org/TR/components-intro/">Google stole their idea</a>.</p>
<!-- Excerpt -->

<p>In this presentation, we&#39;ll look at each piece of the Web Components spec
including Templates, Decorators, Custom Elements, The Shadow Dom, and HTML
Imports. We&#39;ll also look at how this may integrate with ECMAScript 6 Modules to
create a truly modularized, encapsulated, decoupled web.</p>
<p>Although Web Components are not yet ready for use in production we&#39;ll look at
how we can be building our applications with components in mind, and how
frameworks like Angular, Ember, and Polymer are already doing so. This is not
only one of the most exciting specs in draft, it&#39;s also one of the most
important paradigm shifts in web development since Al Gore created the internet.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/nbsWP2cPhhU" itemprop="video"></iframe>
</div>

<script async class="speakerdeck-embed" data-id="93aa45201cdc013275c65e46c93fec54" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>]]></description>
            <link>http://webcomponents.org/presentations/as-i-walk-through-the-valley-of-the-shadow-of-dom-at-jqcon</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/as-i-walk-through-the-valley-of-the-shadow-of-dom-at-jqcon</guid>
            <pubDate>Fri, 12 Sep 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Componentize The Web: Back To The Browser!]]></title>
            <description><![CDATA[<p>Web Components are ushering in a HTML renaissance, encouraging us to think about
how we can bring back the declarative simplicity of HTML to the components we
write today.</p>
<!-- Excerpt -->

<p>Learn how Custom Elements, Shadow DOM, HTML Imports and Templates
can help you stay productive and build elements that are (potentially) more
maintainable and more encapsulated than the models we have today.</p>
<p>In this talk we&#39;ll do a whirlwind tour of Web Components, Polymer and Material Design.</p>
<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/GOPXVLxp9Nc" itemprop="video"></iframe>
</div>

<script async class="speakerdeck-embed" data-id="3d369820e26e01312bd84edea5a75f20" data-ratio="1.6" src="//speakerdeck.com/assets/embed.js"></script>]]></description>
            <link>http://webcomponents.org/presentations/componentize-the-web-back-to-the-browser-at-lxjs</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/componentize-the-web-back-to-the-browser-at-lxjs</guid>
            <pubDate>Sat, 28 Jun 2014 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Unlock the next era of UI development with Polymer]]></title>
            <description><![CDATA[<p>Entering the multi-screen era means rethinking how we build our applications.
Producing a few PSDs doesn&#39;t cut it anymore, we have to start seeing the things
we design as components within larger systems. Join us to learn how to use
Polymer to revolutionize your design process. With these new tools we can create
the UIs of the future, and shorten the time between concept and reality.</p>
<!-- Excerpt -->

<div class="video-wrap">
    <iframe src="//www.youtube.com/embed/HKrYfrAzqFA" itemprop="video"></iframe>
</div>

<div class="video-wrap">
    <iframe src="//www.slideshare.net/slideshow/embed_code/36418662"></iframe>
</div>]]></description>
            <link>http://webcomponents.org/presentations/unlock-the-next-era-of-ui-development-with-polymer-at-io</link>
            <guid isPermaLink="true">http://webcomponents.org/presentations/unlock-the-next-era-of-ui-development-with-polymer-at-io</guid>
            <pubDate>Tue, 24 Jun 2014 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>